<%--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==
  GRAPHICS SETTINGS
==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--%> 

<%--------------------------------------------------------------------
 Where to save images files
--------------------------------------------------------------------%>
\usepackage{graphicx}
<%
setOption <- R.utils::setOption;  # Don't assume 'R.utils' is attached.
figPath <- getOption("devEval/args/path", "figures/");
oFigPath <- setOption("devEval/args/path", figPath);
on.exit({
  setOption("devEval/args/path", oFigPath);
}, add=TRUE);

oPar <- setOption("devNew/args/par", list(lwd=2));
on.exit({
  setOption("devNew/args/par", oPar);
}, add=TRUE);
%>
% Figure paths
\graphicspath{{<%=figPath%>/} {../<%=figPath%>/}} 


<%--------------------------------------------------------------------
 Required packages 
--------------------------------------------------------------------%>
<%
require("ggplot2") || throw("Package not loaded: ggplot2");
%>


<%--------------------------------------------------------------------
 Color schemes
--------------------------------------------------------------------%>
<%
muNCols <- c("#999999", "#000000", "#999999");

# ggplot2 options
xnbrOpts <- element_text(colour="grey50", size=20, hjust=1, lineheight=0.9);
ynbrOpts <- element_text(colour="grey50", size=20, vjust=1, lineheight=0.9);
xlabOpts <- element_text(colour="black", size=28, hjust=0.5);
ylabOpts <- element_text(colour="black", size=28, vjust=0.5, angle=90);
%>

<%--------------------------------------------------------------------
 Figure label schemes
--------------------------------------------------------------------%>
<%
labList <- list(
  CT    = expression(C[T]),
  betaN = expression(beta[N]),
  betaT = expression(beta[T]),
  betaTN = expression(tilde(beta)[T]),
  rho = expression(rho),
  rhoN = expression(tilde(rho)),
  c1 = expression(C[1]),
  c2 = expression(C[2]),
  c1N = expression(tilde(C)[1]),
  c2N = expression(tilde(C)[2])
);
%>
