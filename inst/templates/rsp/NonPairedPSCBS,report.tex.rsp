%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Authors: Henrik Bengtsson
% Created on: 2013-03-08
% Last updated: See HISTORY below.
%
% Usage:
%  R.rsp::rfile("PairedPSCBS.tex.rsp", workdir="reports,rsp/");
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
<%
library("PSCBS");
library("R.cache");
stopifnot(exists("rspArgs", mode="list"));

# Should go into R.rsp
toLatex.default <- function(object, ...) {
  if (is.null(object)) return("");
  object;
} # toLatex()

getChecksum <- function(object, ...) {
  digest::digest(object);
}
%>


<%
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
# REPORT CONFIGURATION
# = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
REPORT_DENSITIES <- getOption("PSCBS::reports/densities", TRUE);
REPORT_TUMORBOOST <- getOption("PSCBS::reports/TumorBoost", TRUE);
REPORT_USE_ALPHA_CHANNEL <- getOption("PSCBS::report/useAlphaChannel", TRUE);
REPORT_PER_CHROMOSOME <- getOption("PSCBS::reports/perChromosome", TRUE);
REPORT_C1C2 <- getOption("PSCBS::reports/pscnSegmentationTransitions", FALSE);
# To implement:
REPORT_PER_GENOTYPE <- getOption("PSCBS::reports/perGenotype", TRUE);
%>



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LATEX STARTUP
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\documentclass[twoside,12pt]{article}
\usepackage{fancyvrb} % Custom verbose environments
\usepackage{lastpage} % Total number of pages
\usepackage{xspace}
\usepackage{subfigure}  % \subfigure[<title>]{}
\usepackage[round]{natbib}

% No paragraph indentation
\setlength{\parindent}{0cm}

\addtolength{\oddsidemargin}{-0.4in}
\addtolength{\evensidemargin}{-1.02in}
\addtolength{\textwidth}{1.5in}
\addtolength{\topmargin}{-1.0in}
\addtolength{\textheight}{1.5in}

\renewcommand{\topfraction}{1.00}   % max fraction of floats at top
\renewcommand{\bottomfraction}{1.0} % max fraction of floats at bottom
\renewcommand{\textfraction}{0.00}

% Header contain project and sample metadata
\usepackage{fancyhdr}
\setlength{\headheight}{40pt}
\pagestyle{fancy}{\fancyhf{}} % Custom header (specified below)
\renewcommand{\headrulewidth}{0pt} % Drop horizontal ruler
\fancyfoot{} % clear all footer fields

%% \pagestyle{fancy}
%% \fancyhead{} % clear all header fields
%% \fancyfoot{} % clear all footer fields
%% \fancyhead[LE,RO]{\slshape \rightmark}
%% \fancyfoot[C]{\thepage}

%%% \fancyhf{}
%%% \fancyhead[LE,RO]{\thepage}
%%% \fancyhead[RE]{\textit{\nouppercase{\leftmark}}}
%%% \fancyhead[LO]{\textit{\nouppercase{\rightmark}}}

\newcommand{\chrLabel}[1]{WG\xspace}

\newcommand{\code}[1]{\texttt{#1}\xspace}

\newcommand{\TCN}{TCN\xspace}
\newcommand{\BAF}{\BAF\xspace}
\newcommand{\BAFN}{BAF$_{N}$\xspace}
\newcommand{\BAFT}{BAF$_{T}$\xspace}
\newcommand{\BAFTN}{BAF$^*_{T}$\xspace}


<% updateChromosomeLabels <- function(fit, ...) { %>
<%
chromosomes <- getChromosomes(fit);
nbrOfChromosomes <- length(chromosomes);
chrsTags <- if (nbrOfChromosomes == 1) {
  sprintf("chr%02d", chromosomes[1]);
} else {
  sprintf("chrs%02d-%02d", min(chromosomes), max(chromosomes));
}
%>
\renewcommand{\chrLabel}{<%=chrsTags%>}
<% } # updateChromosomeLabels() %>


<% pairedPSCBSReport <- function(fit, sampleName=NULL, dataSet=NULL, studyName=NULL, Clim=c(0,4), Blim=c(0,1), reportPath=file.path("reports", studyName), figPath=file.path(reportPath, "figures"), ..., figForce=FALSE) { %>
<%
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Validate arguments
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Argument 'fit':
fit <- Arguments$getInstanceOf(fit, "PairedPSCBS");
fitClass <- class(fit)[1L];
if (inherits(fit, "NonPairedPSCBS")) {
  fitClassLbl <- "Non-paired PSCBS";
} else if (inherits(fit, "PairedPSCBS")) {
  fitClassLbl <- "Paired PSCBS";
} else if (inherits(fit, "CBS")) {
  fitClassLbl <- "CBS";
} else {
  fitClassLbl <- fitClass;
}

# Argument 'sampleName':
if (is.null(sampleName)) {
  sampleName <- sampleName(fit);
}
sampleName <- Arguments$getCharacter(sampleName);
sampleNameEscDots <- gsub(".", "_", sampleName, fixed=TRUE);

# Argument 'dataSet':
if (!is.null(dataSet)) {
  dataSet <- Arguments$getCharacter(dataSet);
} else {
  dataSet <- "?";
}
dataSetLbl <- sprintf("Data set: %s\\\\", toLatex(dataSet));

# Argument 'studyName':
if (is.null(studyName)) studyName <- fitClassLbl;
studyName <- Arguments$getCharacter(studyName);
studyLbl <- sprintf("Study: %s\\\\", toLatex(studyName));

# Argument 'reportPath':
reportPath <- Arguments$getWritablePath(reportPath);

# Argument 'figPath':
figPath <- Arguments$getWritablePath(figPath);

# Argument 'figForce':
figForce <- Arguments$getLogical(figForce);
%>

<%
oFigPath <- setOption("devEval/args/path", figPath);
on.exit({
  setOption("devEval/args/path", oFigPath);
}, add=TRUE);

oPar <- setOption("devNew/args/par", list(lwd=2));
on.exit({
  setOption("devNew/args/par", oPar);
}, add=TRUE);

updateChromosomeLabels(fit);
%>

\fancyhead[C]{%
 \small
 \raggedright
%% \textbf{Study:Dataset:Sample}:
  <%=toLatex(studyName)%>:<%=toLatex(dataSet)%>:<%=toLatex(sampleName)%>:\chrLabel
 \hfill
 \thepage/\pageref{LastPage}\\
%%  \textbf{Compiled} & <%=Sys.Date()%>
 \centering
 \resizebox{\headwidth}{!}{\includegraphics{<%=
   tags <- c("wg", fitClass, "tcn,c1,c2", getChecksum(fit));
   toPNG(name=sampleNameEscDots, tags=tags, width=1024, aspectRatio=0.07, {
     plotTracks(fit, tracks="tcn,c1,c2", scatter=NULL, lwd=5, Clim=c(0,4), calls=NULL, xlab="", ylab="", oma=c(0,0,0,0), mar=c(0,0,0,0));
   }, force=T)%>}}%
%% \vspace{0.2ex}
%% \hline
}

% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% GRAPHICS SETTINGS
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
<%
setOption("devEval/args/force", figForce);
%>
\usepackage{graphicx}
\graphicspath{{<%=figPath%>/} {../<%=figPath%>/}} 

<%
# GGPLOT2 SETTINGS
ClimX <- Clim + c(-1,1)*diff(Clim)*0.08;
BlimX <- Blim + c(-1,1)*diff(Blim)*0.08;

muNCols <- c("#999999", "#000000", "#999999");

require("ggplot2") || throw("Package not loaded: ggplot2");
xnbrOpts <- element_text(colour="grey50", size=20, hjust=1, lineheight=0.9);
ynbrOpts <- element_text(colour="grey50", size=20, vjust=1, lineheight=0.9);
xlabOpts <- element_text(colour="black", size=28, hjust=0.5);
ylabOpts <- element_text(colour="black", size=28, vjust=0.5, angle=90);

labList <- list(
  CT    = expression(C[T]),
  betaN = expression(beta[N]),
  betaT = expression(beta[T]),
  betaTN = expression(tilde(beta)[T]),
  rho = expression(rho),
  rhoN = expression(tilde(rho)),
  c1 = expression(C[1]),
  c2 = expression(C[2]),
  c1N = expression(tilde(C)[1]),
  c2N = expression(tilde(C)[2])
);

symbolList <- list(
  CT    = "$C_{T}$",
  betaN = "$\\beta_{N}$",
  betaT = "$\\beta_{T}$",
  betaTN = "$\\tilde{\\beta}_{T}$",
  rho = "$\\rho$",
  rhoN = "$\\tilde{\\rho}$",
  c1 = "$C_{1}$",
  c2 = "$C_{2}$",
  c1N = "$\\tilde{C}_{1}$",
  c2N = "$\\tilde{C}_{2}$"
);
%>

\begin{document}
\title{<%=fitClassLbl%> Report:\\<%=studyLbl%><%=dataSetLbl%>Sample: <%=toLatex(sampleName)%>}
\author{Report template by Henrik Bengtsson}
\maketitle
\thispagestyle{fancy}

%%\tableofcontents

%>
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DATA
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% METHODS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction}
\label{sec:Introduction}
This is a quality control (QC) report based on non-paired tumor SNP microarray data.

\subsection{Method}
\label{sec:Method}
We use a non-paired PSCBS segmentation method to partion the genome into segments such that all signals in a particular segment are likely to originate from the same underlying parent-specific copy-number state.  This method is adopted from the Paired PSCBS segmentation method~\citep{OlshenA_etal_2011} with two main differences.
First, heterozygous SNPs are "called" based on tumor allele B fractions ("tumor BAFs"), which are poor proxies for the corresponding normal ones.  This is a major disadvantage compared to having a matched normal.
Second, the tumor BAFs cannot be normalized using the TumorBoost method~\citep{BengtssonH_etal_2010}.  


<%--
\subsection{Post-segmentation pruning}
\label{sec:PostSegmentationPruning}
<%
fitP <- pruneByHClust(fit, h=0.25);
#print(fitP);
%>
--%>

\clearpage


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% RESULTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
% WHOLE-GENOME RESULTS
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
\section{Whole-Genome Results}
\label{ch:WholeGenomeResults}


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% SUMMARY ANNOTATION AND GENOTYPE CALLS
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
<% summaryOfAnnotationAndGenotypeCalls <- function(fit, ...) { %>
\subsection{Summary of annotation and genotype calls}
<%
data <- getLocusData(fit, fields="full");
nbrOfLoci <- nrow(data);
nbrOfSNPs <- sum(data$isSNP, na.rm=TRUE);
nbrOfHets <- sum(data$isHet, na.rm=TRUE);

chromosomes <- getChromosomes(fit);
nbrOfChromosomes <- length(chromosomes);
chromosomesH <- seqToHumanReadable(chromosomes);
chromosomesH <- if (nbrOfChromosomes == 1) {
  sprintf("Chr %s", chromosomesH);
} else {
  sprintf("Chrs %s", chromosomesH);
}
chrsTags <- if (nbrOfChromosomes == 1) {
  sprintf("chr%02d", chromosomes[1]);
} else {
  sprintf("chrs%02d-%02d", min(chromosomes), max(chromosomes));
}
updateChromosomeLabels(fit);
%>
\begin{table}[htbp]
 \begin{center}
  \begin{tabular}{lrr}
   Description & Count & Fraction \\
   \hline
   Number of loci & <%=nbrOfLoci%> & 100.00\% \\
   Number of SNPs & <%=nbrOfSNPs%> & <%=sprintf("%.2f", 100*nbrOfSNPs/nbrOfLoci)%>\% \\
   Number of heterozygous SNPs* & <%=nbrOfHets%> & <%=sprintf("%.2f", 100*nbrOfHets/nbrOfSNPs)%>\% \\
   Number of non-polymorphic loci & <%=nbrOfLoci-nbrOfSNPs%> & <%=sprintf("%.2f", 100*(1-nbrOfSNPs/nbrOfLoci))%>\% \\
   Number of chromosomes & <%=nbrOfChromosomes%> & - \\
  \end{tabular}
  \caption{
  Summary of the locus-level data on <%=chromosomesH%>.
  A locus is considered to be a SNP if it has either a non-missing BAF for the tumor.
  (*) Heterozygous calls are based on (whole-genome) naive calling by thresholding \emph{tumor} DHs.
  }
  \label{tbl:LocusStats}
 \end{center}
\end{table}

<% } # summaryOfAnnotationAndGenotypeCalls() %>


<%=summaryOfAnnotationAndGenotypeCalls(fit)%>


% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% SIGNAL DENSITIES
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
<%@include file="signalDensities.tex.rsp"%>
<%=signalDensities(fit, fields=c("CT", "betaT", "rho", "c1", "c2"))%>




% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% PARENT-SPECIFIC COPY-NUMBER SEGMENTATION TRACKS
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
<% pscnSegmentationTracks <- function(fit, ...) { %>
\clearpage
\subsection{Parent-specific copy-number segmentation tracks}
\label{sec:PSCNSegmentationTracks}
<%
chromosomes <- getChromosomes(fit);
nbrOfChromosomes <- length(chromosomes);
chromosomesH <- seqToHumanReadable(chromosomes);
chromosomesH <- if (nbrOfChromosomes == 1) {
  sprintf("Chr %s", chromosomesH);
} else {
  sprintf("Chrs %s", chromosomesH);
}
chrsTags <- if (nbrOfChromosomes == 1) {
  sprintf("chr%02d", chromosomes[1]);
} else {
  sprintf("chrs%02d-%02d", min(chromosomes), max(chromosomes));
}
%>
\begin{figure}[htbp]
 \begin{center}
  <% for (track in c("tcn", "dh", "tcn,c1,c2")) { %>
<%-- <% for (track in c("tcn*", "betaT", "betaTN*", "dh*", "tcn*,c1*,c2-*")) { %> --%>
  \resizebox{\textwidth}{!}{%
    \includegraphics{<%={
      tags <- c(chrsTags, fitClass, gsub("[*-]", "", track), getChecksum(fit));
      toPNG(name=sampleNameEscDots, tags=tags, width=1024, aspectRatio=0.25, par=list(mar=c(2.8,4,1,1)+0.1, cex=1.5), {
        plotTracks(fit, tracks=track, lwd=5, Clim=Clim);
#        plotTrack2(fit, panels=track, lwd=5, Clim=Clim);
      }, force=FALSE);
    }%>}%
  }%
  \\
  <% } # for (track ...) %>
 \end{center}
 \caption{
   Results of <%=fitClassLbl%> segmentation on <%=chromosomesH%> projected onto
   TCN (top), DH (middle), as well as TCN, $C_1$ and $C_2$ (bottom).
   PSCBS segmentation is always done on TCN and DH data.
   There are in total $S=<%=nbrOfSegments(fit, splitters=FALSE)%>$ segments. 
 }
 \label{fig:PairedPSCBS}
\end{figure}
<% } # pscnSegmentationTracks() %>

<%=pscnSegmentationTracks(fit)%>



% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
% PARENT-SPECIFIC COPY-NUMBER TRANSITIONS
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
<% pscnSegmentationTransitions <- function(fit, ...) { %>
<% if (!REPORT_C1C2) return(); %>
\clearpage
\subsection{Parent-specific copy-number transitions}
\label{sec:PSCNSegmentationTransitions}
<%
# plotC1C2Grid()
require("aroma.cn") || throw("Package not loaded: aroma.cn");

chromosomes <- getChromosomes(fit);
nbrOfChromosomes <- length(chromosomes);
chromosomesH <- seqToHumanReadable(chromosomes);
chromosomesH <- if (nbrOfChromosomes == 1) {
  sprintf("Chr %s", chromosomesH);
} else {
  sprintf("Chrs %s", chromosomesH);
}
chrsTags <- if (nbrOfChromosomes == 1) {
  sprintf("chr%02d", chromosomes[1]);
} else {
  sprintf("chrs%02d-%02d", min(chromosomes), max(chromosomes));
}
%>
\begin{figure}[htbp]
 \begin{center}
  \resizebox{0.6\textwidth}{!}{%
    \includegraphics{<%={
      tags <- c(chrsTags, fitClass, "C1C2", getChecksum(fit));
      toPNG(name=sampleNameEscDots, tags=tags, width=640, aspectRatio=1, par=list(mar=c(4,4,1,1)+0.1, cex=2), {
        plotC1C2Grid(fit, Clim=ClimX);
        linesC1C2(fit, lwd=2);
      }, force=FALSE);
    }%>}%
  }%
 \end{center}
 \caption{
   A graph representation of the minor ($C_1$) and major ($C_2$) 
   copy-number segmentation on <%=chromosomesH%>,
   where the nodes represent ($S=<%=nbrOfSegments(fit, splitters=FALSE)%>$)
   segments and the lines change points.
   The size of a node reflects the length of the corresponding segment.
   The marginal distributions (gray curves) of the minor and the major CNs 
   are projected onto the horizontal and vertical axis, respectively.
   To easy a visual comparison, the latter is also projected onto the
   horizontal axis (light blue curve).
 }
 \label{fig:C1C2}
\end{figure}
<% } # pscnSegmentationTransitions() %>

<%=pscnSegmentationTransitions(fit)%>



% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
% PER CHROMOSOME SEGMENTATION
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
<% if (REPORT_PER_CHROMOSOME && nbrOfChromosomes(fit) > 1) { %>
<% for (chr in getChromosomes(fit)) { %>
\clearpage
\section{Chromosome <%=chr%>}
\label{sec:Chromosome<%=chr%>Results}
<%
fitT <- extractChromosome(fit, chromosome=chr);
%>
<%=summaryOfAnnotationAndGenotypeCalls(fitT)%>

<%=signalDensities(fitT, fields=c("CT", "betaT", "rho", "c1", "c2"))%>

<%=pscnSegmentationTracks(fitT)%>

<%=pscnSegmentationTransitions(fitT)%>
<% } # for (chr ...) %>
<% } # if (REPORT_PER_CHROMOSOME && nbrOfChromosomes(fit) > 1) %>


<%--
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
% PRUNED: WHOLE-GENOME SEGMENTATION
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
\subsection{Hierarchical pruning}
\label{sec:HierarchicalPruning}

% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
% PRUNED: PER CHROMOSOME SEGMENTATION
% = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
--%>


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% REFERENCES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\bibliography{bioinformatics-journals-abbr,PSCBS}
%\bibliographystyle{plain}
\bibliographystyle{natbib}

\appendix
\section{Appendix}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Session information
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \clearpage
\section*{Session information}
<%=toLatex(sessionInfo())%>
This report was generated via \code{report(fit)} which utilizes the R.rsp package.  The template for this report was created by Henrik Bengtsson and last updated on March 12, 2012.
\end{document}

<% } # pairedPSCBSReport() %>

<%=do.call("pairedPSCBSReport", args=rspArgs)%>



<%
######################################################################
# RSP CLOSEUP
######################################################################
# Function for renaming report afterwards
assign("renamePDF", function() {
  filename <- sprintf("%s,report.pdf", studyName);
  pathname <- file.path(reportPath, filename);
  file.rename("report.pdf", pathname);
}, envir=globalenv());
%>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% HISTORY:
# 2012-11-03
# o Replaced deprecated ggplot2 functions.
# 2012-09-16
# o Added easy report configuration at the very top.
# 2012-05-30
# o Removed ggplot2 warnings on missing values.
# 2012-02-28
# o Now it is possible to turn off usage of the alpha channel in
#   plots, e.g. setOption("PSCBS::report/useAlphaChannel", FALSE).
#   This is useful for if the alpha channel is not supported.
% 2012-02-27
% o First successful run with real data.
% o Now all of the report uses a PairedPSCBS object.
% o Now making more use of templates.
% o Now passing a data frame to segmentByPairedCBS().
% 2011-09-30
% o Created.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
